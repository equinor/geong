[asset_hosts]
# URLs for hosting assets, defaults use the Panel server (--static-dirs) with
# relative URLs. These are used as {ASSET_...} variables in the rest of the
# configuration, and can be overridden with ASSET_... environment variables.
images               = "images"
instructions         = "instructions"
popups               = "popups"

[style]
# raw_css, css_files, logo, and favicon all support supplying URLs so style can
# be injected
raw_css              = ["css/geong.css"]
css_files            = []
logo                 = "images/geong_logo.png"
favicon              = "images/favicon.png"
header_color         = "#ffffff"
header_background    = "#00cc99"

    [style.colors]
    default          = "#cccccc"

    # Deep
    lobe             = "#ffea18"
    channel_fill     = "#fdc801"
    overbank         = "#b5cf6d"
    mtd              = "#6a5ca2"
    drape            = "#078cb1"

    # Shallow
    exceptional                        = "#feed01"
    distributary_fluvial_channel_fill  = "#feed01"
    upper_fan_delta_slope              = "#feed01"
    upper_shoreface                    = "#feed01"

    good                               = "#fcc96d"
    beach                              = "#fcc96d"
    lower_shoreface                    = "#fcc96d"
    mass_transport_deposits            = "#fcc96d"
    tidal_channel_fill                 = "#fcc96d"
    tidal_dunes_bars                   = "#fcc96d"
    upper_delta_front                  = "#fcc96d"

    moderate                           = "#f18401"
    floodplain_overbank                = "#f18401"
    lower_delta_front                  = "#f18401"
    lower_fan_delta_slope              = "#f18401"
    offshore_transition                = "#f18401"
    swamp_marsh                        = "#f18401"
    tidal_flat                         = "#f18401"

    poor                               = "#9f8cc3"
    bay_lagoon_lake                    = "#9f8cc3"
    deltaplain_overbank                = "#9f8cc3"
    offshore_fines                     = "#9f8cc3"
    prodelta                           = "#9f8cc3"

#
# Apps
#
[apps]
title            = "Net to Gross Calculator"
apps             = ["instructions", "deep", "shallow"]
primary_app      = "instructions"
reader           = "api"

    [apps.splash]
    exclude_apps     = ["instructions"]
    text_url         = "{ASSET_INSTRUCTIONS}/splash_intro.md"

    [apps.instructions]
    label            = "Instructions"
    views            = ["purpose", "deep", "shallow"]
    primary_view     = "purpose"

        [apps.instructions.purpose]
        label            = "Purpose and Tips"
        url              = "{ASSET_INSTRUCTIONS}/purpose.md"

        [apps.instructions.deep]
        label            = "Deep Marine"
        url              = "{ASSET_INSTRUCTIONS}/deep.md"

        [apps.instructions.shallow]
        label            = "Shallow Marine"
        url              = "{ASSET_INSTRUCTIONS}/shallow.md"

    [apps.deep]
    label            = "Deep Marine"
    views            = ["workflow", "data_viewer"]
    primary_view     = "workflow"

        [apps.deep.workflow]
        label            = "Workflow"
        stages           = ["set_up", "composition", "filter_classes", "result", "report"]

        [apps.deep.data_viewer]
        label            = "Data Viewer"
        tables           = ["systems", "complexes", "elements"]
        page_size        = 20
        frozen_columns   = ["building_block_type", "descriptive_reservoir_quality", "ng_vsh40_pct"]

            [apps.deep.data_viewer.columns]

                [apps.deep.data_viewer.columns.systems]
                building_block_type             = "Building Block Type"
                descriptive_reservoir_quality   = "N:G Quality Bracket"
                ng_vsh40_pct                    = "Net Gross"
                thickness_mtvd                  = "Thickness"
                top_depth_mtvd                  = "Top Depth"
                base_depth_mtvd                 = "Base Depth"
                conventional_facies_vs_hebs     = "Bed Type"
                confinement                     = "Confinement"
                relative_dip_position           = "Relative Dip Position"
                relative_strike_position        = "Relative Strike Position"

                [apps.deep.data_viewer.columns.complexes]
                building_block_type             = "Building Block Type"
                descriptive_reservoir_quality   = "N:G Quality Bracket"
                ng_vsh40_pct                    = "Net Gross"
                thickness_mtvd                  = "Thickness"
                top_depth_mtvd                  = "Top Depth"
                base_depth_mtvd                 = "Base Depth"
                conventional_facies_vs_hebs     = "Bed Type"
                confinement                     = "Confinement"
                relative_dip_position           = "Relative Dip Position"
                relative_strike_position        = "Relative Strike Position"
                architectural_style             = "Architectural Style"

                [apps.deep.data_viewer.columns.elements]
                building_block_type             = "Building Block Type"
                descriptive_reservoir_quality   = "N:G Quality Bracket"
                ng_vsh40_pct                    = "Net Gross"
                thickness_mtvd                  = "Thickness"
                top_depth_mtvd                  = "Top Depth"
                base_depth_mtvd                 = "Base Depth"
                conventional_facies_vs_hebs     = "Bed Type"
                confinement                     = "Confinement"
                relative_dip_position           = "Relative Dip Position"
                relative_strike_position        = "Relative Strike Position"
                spatial_position                = "Spatial Position"
                architectural_style             = "Architectural Style"

    [apps.shallow]
    label            = "Shallow Marine"
    views            = ["workflow", "data_viewer"]
    primary_view     = "workflow"

        [apps.shallow.workflow]
        label            = "Workflow"
        stages           = ["set_up", "composition", "result", "report"]

        [apps.shallow.data_viewer]
        label            = "Data Viewer"
        tables           = ["systems", "complexes", "elements"]
        page_size        = 20

            [apps.shallow.data_viewer.columns]

                [apps.shallow.data_viewer.columns.systems]
                building_block_type             = "Building Block Type"
                descriptive_reservoir_quality   = "N:G Quality Bracket"
                ng_vsh40_pct                    = "Net Gross"
                thickness_mtvd                  = "Thickness"
                top_depth_mtvd                  = "Top Depth"
                base_depth_mtvd                 = "Base Depth"

                [apps.shallow.data_viewer.columns.complexes]
                building_block_type             = "Building Block Type"
                descriptive_reservoir_quality   = "N:G Quality Bracket"
                ng_vsh40_pct                    = "Net Gross"
                thickness_mtvd                  = "Thickness"
                top_depth_mtvd                  = "Top Depth"
                base_depth_mtvd                 = "Base Depth"

                [apps.shallow.data_viewer.columns.elements]
                building_block_type             = "Building Block Type"
                descriptive_reservoir_quality   = "N:G Quality Bracket"
                ng_vsh40_pct                    = "Net Gross"
                thickness_mtvd                  = "Thickness"
                top_depth_mtvd                  = "Top Depth"
                base_depth_mtvd                 = "Base Depth"


#
# Stages
#
[stages]

    [stages.deep]

        [stages.deep.set_up]
        label            = "Set Up"

        [stages.deep.composition]
        label            = "Element Composition"

            [stages.deep.composition.warnings]
            not_100_text     = """
                The weights should equal **100%**.

                Currently, the weights sum to **{total:.0f}%**
                """

            [stages.deep.composition.params]
            ready_parameter  = "sum_to_100"

        [stages.deep.filter_classes]
        label            = "Lobe/Channel Filters"

        [stages.deep.result]
        label            = "Result"

            [stages.deep.result.params]
            ready_parameter  = "ready"
            auto_advance     = true

        [stages.deep.report]
        label            = "Final Report"
        report           = "net_gross_ppt"


    [stages.shallow]

        [stages.shallow.set_up]
        label            = "Set Up"

        [stages.shallow.composition]
        label            = "Element Composition"

            [stages.shallow.composition.warnings]
            no_elements_text = """
                No result. Your choices are not reflected in the underlying data
                and are considered geologically unlikely.

                Choose other another start point on the previous page or build a
                model using the customisation functionality above.
                """
            not_100_text     = """
                The weights should equal **100%**.

                Currently, the weights sum to **{total:.0f}%**
                """
            ng_above         = 90
            ng_above_text    = """
                Very high N:G values (~85-90% and above) are unlikely for an
                entire trap GRV unless strong observational or empirical evidence
                supports it.

                Consider sources of heterogeneity and build them in to your model
                with the appropriate elements and qualities.
                """
            customize_quality_text = """
                Customise the quality brackets to each element's general quality
                tendency, indicated by the color of the slider bar, unless your
                data observations support outlier quality.
                """


            [stages.shallow.composition.params]
            ready_parameter  = "sum_to_100"

        [stages.shallow.result]
        label            = "Result"

            [stages.shallow.result.params]
            ready_parameter  = "ready"
            auto_advance     = true

        [stages.shallow.report]
        label            = "Final Report"
        report           = "net_gross_ppt"


#
# Report specs
#
[report]

    [report.net_gross_ppt]
    generator = "powerpoint"
    template = "templates/geong_pptx.toml"
    file_name = "geong_{date:%Y%m%d}.pptx"

        [[report.net_gross_ppt.slide]]
        layout               = "title"
        title                = "Geo:N:G Report: {geox_id}"
        subtitle.type        = "text"
        subtitle.content     = "{date:%d %b %Y}"

        [[report.net_gross_ppt.slide]]
        layout               = "one_column"
        title                = "{geox_id} Scenarios"
        content.type         = "text"
        content.content      = "{scenario_list}"

        [[report.net_gross_ppt.slide]]
        nested.cfg           = "scenarios"
        nested.data          = "scenarios"

        [[report.net_gross_ppt.slide]]
        layout               = "closing"

        [report.net_gross_ppt.scenarios]
            [[report.net_gross_ppt.scenarios.slide]]
            layout               = "section"
            title                = "Scenario {scenario_name}"

            [[report.net_gross_ppt.scenarios.slide]]
            layout               = "test_content"
            title                = "Final estimate: {net_gross:.0f}%"
            chart.type           = "chart"
            chart.content        = "ref:composition"
            table.type           = "table"
            table.content        = "ref:composition"

            [[report.net_gross_ppt.scenarios.slide]]
            layout               = "test_content"
            title                = "Modified estimate: {net_gross_modified:.0f}%"
            chart.type           = "chart"
            chart.content        = "ref:composition"
            table.type           = "table"
            table.content        = "ref:composition"

            [report.net_gross_ppt.scenarios.content]

                [report.net_gross_ppt.scenarios.content.chart.composition]
                type                 = "bar_clustered"
                categories           = ["Lobe", "Channel Fill", "Overbank"]
                series_1             = [67, 27, 6]
                series_2             = [31, 55, 14]

                [report.net_gross_ppt.scenarios.content.table.composition]
                rows                 = 2
                cols                 = ["Building Block", "Weight", "N:G", "Contribution"]
